@model Job.WebMvc.Models.TravelExpense.TravelExpenseEditModel
@{
    ViewBag.Title = "Rimborsi spese";
    Layout = "~/Views/Shared/_SpaceLayout.cshtml";
}
@section sectionHeader {
    <script type="text/javascript">
    var TRAVEL_EXPENSE_CODE = '@Html.Raw(Model.TravelExpense.TravelExpenseCode)';
    var CAR_PLATE = '@Html.Raw(Model.TravelExpense.Person.CarPlate)';
    var CAR_DESCRIPTION = '@Html.Raw(Model.TravelExpense.Person.CarDescription)';
    var CAR_KM_COST = @Html.Raw(Model.TravelExpense.Person.CarKmCost.ToString("#0.00"));
    var CAR_CATEGORY = parseInt(@Html.Raw(Model.CarLineCategory.TravelExpenseLineCategoryId));
    $(function () {
        var dd = zzsDateToItalianString(new Date());
        $('#dialogEditLineModal').dialog({
            autoOpen: false,
            width: 800,
            resizable: false,
            title: 'Modifica/Crea riga',
            modal: true,
            buttons: {
                "Salva": updateDialogEditLineModal,
                "Annulla": cancelDialogEditLineModal
            }
        });
        $('#dialogRegisterModal').dialog({
            autoOpen: false,
            width: 800,
            resizable: false,
            title: 'Modifica/Crea riga',
            modal: true,
            buttons: {
                "Registra": registerDialogRegisterModal,
                "Annulla": cancelDialogRegisterModal
            }
        });
        loadPageData();
    });
    function add_TravelExpenseLine() {
        $('#dialogEditLineModalId').val(-1);
        $('#dialogEditLineModalDescription').val('');
        $('#dialogEditLineModalAmount').val(0);
        $('#dialogEditLineModalCarPlate').val(CAR_PLATE);
        $('#dialogEditLineModalCarDescription').val(CAR_DESCRIPTION);
        $('#dialogEditLineModalCarKmCost').val(CAR_KM_COST);
        $('#dialogEditLineModalKm').val(0);
        $('#dialogEditLineModalCategory').val(-1);
        ShowHideCarRow();
        $('#dialogEditLineModal').dialog('open');
    }

    function edit_TravelExpenseLine(lineId) 
    {
        var id = parseInt(lineId);
        $('#dialogEditLineModalId').val(id);
        $('#dialogEditLineModalDescription').val('');
        $('#dialogEditLineModalNote').val('');
        $('#dialogEditLineModalAmount').val(0);
        $('#dialogEditLineModalCarPlate').val(CAR_PLATE);
        $('#dialogEditLineModalCarDescription').val(CAR_DESCRIPTION);
        $('#dialogEditLineModalCarKmCost').val(CAR_KM_COST);
        $('#dialogEditLineModalKm').val(0);
        if ( id > 0) 
        {
            $.ajax({
                method: "GET",
                url: '@Url.Content("~/api/TravelExpenseLineSvc")/' + id.toString(),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                error: function (response) 
                {
                    alert(response.responseText);
                },
                success: function (result) 
                {
                    if ((result.ErrorResult == "OK") || (result.ErrorResult == undefined))
                    {
                        if (result.Data != null) {
                            var dd = JSON.parse(result.Data);
                            $('#dialogEditLineModalId').val(dd.TravelExpenseLineId);
                            $('#dialogEditLineModalCategory').val(dd.TravelExpenseLineCategoryId);
                            ShowHideCarRow();
                            $('#dialogEditLineModalNote').val(dd.Note);
                            $('#dialogEditLineModalAmount').val(dd.Amount);
                            $('#dialogEditLineModalCarPlate').val(dd.CarPlate);
                            $('#dialogEditLineModalCarDescription').val(dd.CarDescription);
                            $('#dialogEditLineModalCarKmCost').val(dd.CarKmCost);
                            $('#dialogEditLineModalKm').val(dd.CarKm);
                            var d = dd.Date.substr(0, dd.Date.indexOf("T")); 
                            $('#dialogEditLineModalDate').val(d);
                        }
                    } 
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                }
            });
        }
        $('#dialogEditLineModal').dialog('open');
    }

    function updateDialogEditLineModal() {
        var sendData = new Object();
        sendData.TravelExpenseLineId = $('#dialogEditLineModalId').val();
        sendData.TravelExpenseCode = TRAVEL_EXPENSE_CODE;
        var d = $('#dialogEditLineModalDate').val();
        if (d == null || d.trim() == '') {
            alert('La data è obbligatoria!');
            return;
        }
        sendData.Date = d;
        sendData.CategoryId = $('#dialogEditLineModalCategory').val();
        if (sendData.CategoryId < 0) {
            alert('Devi impostare la categoria!');
            return;
        }
        sendData.Amount = $('#dialogEditLineModalAmount').val();
        sendData.CarPlate = $('#dialogEditLineModalCarPlate').val();
        sendData.CarDescription = $('#dialogEditLineModalCarDescription').val();
        sendData.CarKmCost = $('#dialogEditLineModalCarKmCost').val();
        sendData.CarKm = $('#dialogEditLineModalKm').val();
        sendData.Note = $('#dialogEditLineModalNote').val();
        $.ajax({
            method: "POST",
            url: '@Url.Content("~/api/TravelExpenseLineSvc")',
            data: JSON.stringify(sendData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            error: function (response) {
                alert(response.responseText);
            },
            success: function (result) {
                if ((result.ErrorResult == "OK") || (result.ErrorResult == undefined)) {
                    cancelDialogEditLineModal();
                } else {
                    alert(result.ErrorMessage);
                }
            }
        });
    }
    function cancelDialogEditLineModal() {
        $('#dialogEditLineModalId').val(-1);
        $('#dialogEditLineModalNote').val('');
        $('#dialogEditLineModalDescription').val('');
        $("#dialogEditLineModalDate").val(null);
        $('#dialogEditLineModal').dialog('close');
        window.location.reload();
    }
    function loadPageData()
    {
        $("#tbodyTravelExpenseLine").empty();
        loadTravelExpenseLines();
    }
    function loadTravelExpenseLines() {
        var sendData = new Object();
        sendData.Operation = "RetrieveLines";
        sendData.TravelExpenseCode = TRAVEL_EXPENSE_CODE;
        $.ajax({
            method: "POST",
            url: '@Url.Content("~/api/TravelExpenseSvc")',
            data: JSON.stringify(sendData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            error: function (response) {
                alert(response.responseText);
            },
            success: function (result) {
                if (result.ResultStatus == "OK") {
                    if (result.Data != null) {
                        var dd = JSON.parse(result.Data);
                        if (dd.length > 0) {
                            buildRowtable(dd);
                        } else {
                            $("#tbodyTravelExpenseLine").append('<tr><td colspan="3">Nessun valore trovato</td></tr>');
                        }
                    } else {
                        $("#tbodyTravelExpenseLine").append('<tr><td colspan="3">Nessun valore trovato</td></tr>');
                    }
                } else {
                    alert(result.Error);
                    alert(result.ErrorMessage);
                    $("#tbodyTravelExpenseLine").append('<tr><td colspan="3">' + result.Error + '</td></tr>');
                    $("#tbodyTravelExpenseLine").append('<tr><td colspan="3">' + result.ErrorMessage + '</td></tr>');
                }
            }
        });
    }
    function buildRowtable(rowValues)
    {
        var teTotal = 0;
        rowValues.sort(function (o1, o2) {
            var od1 = new Date(o1.Date);
            var od2 = new Date(o2.Date);
            if (od1 < od2) return 1;
            else if (od1 > od2) return -1;
            else return 0;
        });
        for (var i = 0; i < rowValues.length; i++) {
            var r= '<tr>';
            r += '<td><a href="#" onclick="edit_TravelExpenseLine(' + rowValues[i].TravelExpenseLineId + ')">' + zzsDateToItalianString(new Date(rowValues[i].Date)) + '</a></td>';
            r += '<td style="padding-left:12px;">' + rowValues[i].TravelExpenseLineCategories.Description + '</td>';
            r += '<td style="text-align:right; padding-left:12px;">&#8364; ' + rowValues[i].Amount.toFixed(2) + '</td>';
            r += '</tr>';
            $("#tbodyTravelExpenseLine").append(r);
            teTotal += rowValues[i].Amount;
            if (rowValues[i].TravelExpenseLineCategories.UsePersonalCar) {
                r= '<tr>';
                r += '<td></td>';
                r += '<td  style="padding-left:12px;">';
                r += '<span>' + rowValues[i].CarPlate + '</span>';
                r += '<span style="padding-left:12px;">' + rowValues[i].CarDescription + '</span>';
                r += '<span style="padding-left:12px;text-align:right;">' + rowValues[i].CarKmCost.toFixed(2) + ' €/Km</span>';
                r += '<span style="padding-left:12px;">' + rowValues[i].CarKm + ' Km</span>';
                r += '</td>';
                r += '<td></td>';
                r += '</tr>';
                $("#tbodyTravelExpenseLine").append(r);
            }
            if (rowValues[i].Note != null) {
                r= '<tr>';
                r += '<td></td>';
                r += '<td style="padding-left:12px;">' + rowValues[i].Note + '</td>';
                r += '<td></td>';
                r += '</tr>';
                $("#tbodyTravelExpenseLine").append(r);
            }
        }
        $('#hiddenTravelExpenseTotal').val(teTotal.toFixed(2));
        $("#spanTravelExpenseTotal").text(teTotal.toFixed(2));
    }
    function ShowHideCarRow() {
        var catId = parseInt($('#dialogEditLineModalCategory').val());
        if (catId != CAR_CATEGORY) {
            $("#dialogEditLineModalCarTr").hide();
            $("#dialogEditLineModalDescription").empty();
        } else {
            $("#dialogEditLineModalCarTr").show();
            $("#dialogEditLineModalDescription").val("Uso autovettura personale");
        }
    }
    function calcRimbKm() {
        var rk = $('#dialogEditLineModalKm').val();
        if (rk == null) rk = 0;
        var k = $('#dialogEditLineModalCarKmCost').val();
        if (k == null) k = 0;
        var r = rk * k;
        $('#dialogEditLineModalAmount').val(r.toFixed(2));
    }

    function register_travelExpense() 
    {
        var sendData = new Object();
        sendData.Operation = "PostTravelExpenseRequest";
        sendData.TravelExpenseCode = TRAVEL_EXPENSE_CODE;
        $.ajax({
            method: "POST",
            url: '@Url.Content("~/api/TravelExpenseSvc")',
            data: JSON.stringify(sendData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            error: function (response) {
                alert(response.responseText);
            },
            success: function (result) {
                if (result.ResultStatus != "OK") {
                    alert(result.Error);
                    alert(result.ErrorMessage);
                } else {
                    window.location.reload();
                }
            }
        });
        window.location.reload(true);
    }
    function  travelExpenseHeader_update() 
        {
            var sendData = new Object();
            sendData.Operation = "TravelExpenseUpdateHeader";
            sendData.TravelExpenseCode = TRAVEL_EXPENSE_CODE;
            sendData.Note = $('#edt_TravelExpenseHeaderNote').val();
            sendData.InvoiceAmount = $('#edt_TravelExpenseHeaderInvoiceAmount').val();
            $.ajax({
                method: "POST",
                url: '@Url.Content("~/api/TravelExpenseSvc")',
                data: JSON.stringify(sendData),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                error: function (response) {
                    alert(response.responseText);
                },
                success: function (result) {
                    if (result.ResultStatus != "OK") {
                        alert(result.Error);
                        alert(result.ErrorMessage);
                    }
                }
            });
            window.location.reload(true);
        }
        // Registra la nota spese
        function showDialogRegisterModal() {
            var sendData = new Object();
            sendData.Operation = "GetTravelExpenseRegisterConfirmData";
            sendData.TravelExpenseCode = TRAVEL_EXPENSE_CODE;
            sendData.WorkIdList = '';
            $("input[type='checkbox'][name^='JCHK']").each(function() 
                {
                    if ($(this).is(':checked')) 
                    {
                        sendData.WorkIdList += $(this).attr("data-workid") + '#';
                    }
                }
            );
            if (sendData.WorkIdList == '') {
                alert("Almeno una data la devi selezionare!");
                return;
            } 
            sendData.WorkIdList = sendData.WorkIdList.slice(0,-1);
            $.ajax({
                method: "POST",
                url: '@Url.Content("~/api/TravelExpenseSvc")',
                data: JSON.stringify(sendData),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                error: function (response) {
                    alert(response.responseText);
                },
                success: function (result) {
                    if (result.ResultStatus != "OK") {
                        alert(result.Error);
                        alert(result.ErrorMessage);
                    } else {
                        $('#dialogRegisterModalHiddenData').val(result.Data);
                        var resData = JSON.parse(result.Data);
                        var htmlResult = "PERSONA: " + resData.PeopleId + " " + resData.PeopleFullName + "<br />";
                        htmlResult += "TRASFERTA: " + resData.TravelExpenseCode + " <span style=\"font-weight:700;\">dal</span> " + (new Date(resData.TravelExpenseFromDate)).toLocaleDateString() + " <span style=\"font-weight:700;\">al</span> " +(new Date(resData.TravelExpenseToDate)).toLocaleDateString() + "<br />";
                        htmlResult += "Totale nota spese: <span style=\"font-weight:700;\">&#8364; " + resData.TravelExpenseTotal.toFixed(2) + "</span><br />";
                        htmlResult += "Totale fatture: <span style=\"font-weight:700;\">&#8364; " + resData.TravelExpenseInvoiceAmount.toFixed(2) + "</span><br />";
                        htmlResult += "Addebitate alle seguenti commesse: <br />";
                        htmlResult += "<table><thead><tr><th colspan=\"2\">Commessa</th><th style=\"padding-left:12px;\">Ore</th><th style=\"padding-left:12px;\">Importo</th></thead><tbody>";
                        for (var i = 0; i < resData.Jobs.length; i++) {
                            htmlResult += "<tr>";
                            htmlResult += "<td>" + resData.Jobs[i].Code + "</td>";
                            htmlResult += "<td style=\"padding-left:12px;\">" + resData.Jobs[i].Description + "</td>";
                            htmlResult += "<td style=\"padding-left:12px;text-align:right;\">" + resData.Jobs[i].Hours.toFixed(2) + "</td>";
                            htmlResult += "<td style=\"padding-left:12px;text-align:right;\">&#8364; " + resData.Jobs[i].Amount.toFixed(2) + "</td>";
                            htmlResult += "</tr>";
                        }
                        htmlResult += "</tbody></table>";
                        $('#dialogRegisterModalDisplayData').html(htmlResult);
                        $('#dialogRegisterModal').dialog('open');
                    }
                }
            });
        }
        function registerDialogRegisterModal() {
            var sendData = new Object();
            sendData.Operation = "TravelExpenseRegisterConfirm";
            sendData.TravelExpenseCode = TRAVEL_EXPENSE_CODE;
            sendData.RegisterData = $('#dialogRegisterModalHiddenData').val();
            $.ajax({
                method: "POST",
                url: '@Url.Content("~/api/TravelExpenseSvc")',
                data: JSON.stringify(sendData),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                error: function (response) {
                    alert(response.responseText);
                },
                success: function (result) {
                    if (result.ResultStatus != "OK") {
                        alert(result.Error);
                        alert(result.ErrorMessage);
                    } else {
                        $('#dialogRegisterModal').dialog('close');
                        window.location.reload(true);
                    }
                }
            });
        }
        function cancelDialogRegisterModal() {
            $('#dialogRegisterModalDisplayData').empty();
            $('#dialogRegisterModal').dialog('close');
            window.location.reload(true);
        }
    </script>
}
<div id="dialogRegisterModal" title="Registra la nota spese">
    <span class="ui-helper-hidden-accessible"><input type="text" />Prevents autofocus from opening start datepicker on dialog load</span>
    <input type="hidden" id="dialogRegisterModalHiddenData" name="dialogRegisterModalHiddenData" />
    <div id="dialogRegisterModalDisplayData">

    </div>
</div>
<div id="dialogEditLineModal" title="Crea/modifica linea nota spese">
    <input type="hidden" value="" id="dialogEditLineModalId" name="dialogEditLineModalId" />
    <span class="ui-helper-hidden-accessible"><input type="text" />Prevents autofocus from opening start datepicker on dialog load</span>
    <table style="width:100%;">
        <tr><td>DATA</td><td>CATEGORIA</td><td>IMPORTO</td></tr>
        <tr><td><input type="date" id="dialogEditLineModalDate" style="width:160px;"></td><td>@Html.DropDownList("dialogEditLineModalCategory", Model.DDLCategoryList, new { @onchange = "ShowHideCarRow();" })</td><td style="text-align:right;">&#8364; <input id="dialogEditLineModalAmount" style="width:80px;"></td></tr>
        <tr id="dialogEditLineModalCarTr">
            <td colspan="3">
                <table style="width:100%;">
                    <tr><td>TARGA</td><td>DESCRIZIONE</td><td>€/KM</td><td>Num. KM</td></tr>
                    <tr><td><input id="dialogEditLineModalCarPlate" style="width:100px;"></td><td><input id="dialogEditLineModalCarDescription" style="width:340px;"></td><td>€ <input id="dialogEditLineModalCarKmCost" style="width:80px;"></td><td><input id="dialogEditLineModalKm" style="width:80px;" onblur="calcRimbKm();"></td></tr>
                </table>
            </td>
        </tr>
        <tr><td colspan="3">Annotazioni:<br /><textarea rows="5" style="width:100%;" id="dialogEditLineModalNote"></textarea></td></tr>
    </table>
</div>
<div class="container-fluid">
    <td class="row">
        <ol class="breadcrumb">
            <li>@Html.ActionLink("[Home]", "Index", "Home")</li>
            <li>@Html.ActionLink("[Spese trasferta]", "Index", "TravelExpense", new { filterMonth = Model.TEFilterMonth, filterYear = Model.TEFilterYear, filterPeopleId = Model.TEFilterPeopleId }, null)</li>
            <li class="active">Modifica rimborso spese</li>
        </ol>
        <input type="hidden" id="hiddenTravelExpenseTotal" name="hiddenTravelExpenseTotal" value="@Html.Raw(string.Format("{0:N2}", Model.TravelExpenseList.Total))" />
        @if (Model.TravelExpense.Status != Job.EFDataModel.TravelExpenses.STATUS_REGISTRATA)
        {
            if (Model.Works == null || Model.Works.Count < 1 || Model.TravelExpense.Amount < 1) {
                <div>Non è presente l'attività fatta o il totale del rimborso spese è 0!</div>
            } else { 
                <a href="#" onclick="showDialogRegisterModal();">Registra...</a>
            }
        }
        <div style="margin-top:6px;">
            <table>
                <tr><td>CODICE</td><td style="padding-left:24px;">DATA</td><td style="padding-left:24px;">PERSONA</td><td style="padding-left:24px;">DAL</td><td style="padding-left:24px;">AL</td><td style="padding-left:24px;">TOTALE</td><td style="padding-left:24px;">STATUS</td></tr>
                <tr><td>@Html.Raw(Model.TravelExpense.TravelExpenseCode)</td><td style="padding-left:24px;">@Html.Raw(string.Format("{0:dd/MM/yyyy}", Model.TravelExpense.Date))</td><td style="padding-left:24px;">@Html.Raw(string.Format("{0} {1}", Model.TravelExpense.Person.LastName, Model.TravelExpense.Person.FirstName))</td><td style="padding-left:24px;"><span id="spanTravelExpenseBeginDate">@Html.Raw(Model.TravelExpenseList.BeginDate.HasValue ? string.Format("{0:d}", Model.TravelExpenseList.BeginDate.Value) : string.Empty)</span></td><td style="padding-left:24px;"><span id="spanTravelExpenseEndDate">@Html.Raw(Model.TravelExpenseList.EndDate.HasValue ? string.Format("{0:d}", Model.TravelExpenseList.EndDate.Value) : string.Empty)</span></td><td style="padding-left:24px;"> &#8364; <span id="spanTravelExpenseTotal">@Html.Raw(string.Format("{0:N2}", (Model.TravelExpenseList.Total.HasValue ? Model.TravelExpenseList.Total.Value : 0)))</span></td><td style="padding-left:24px;">@Html.Raw(Model.TravelExpense.getStatusDescription())</td></tr>
                <tr><td colspan="7" style="padding-top:6px;">@Html.TextArea("edt_TravelExpenseHeaderNote", Model.TravelExpense.Annotation, new { @style = "width:100%;" })</td></tr>
                <tr>
                    <td colspan="3" style="padding-top:6px;">Importo totale fatture alberghi e ristoranti:</td>
                    <td colspan="2" style="padding-top:6px;">€ @Html.TextBox("edt_TravelExpenseHeaderInvoiceAmount", Model.TravelExpense.InvoiceAmount, new { @style = "text-align:right;padding-right:6px;width:80px;" })</td>
                    @if (Model.TravelExpense.Status != Job.EFDataModel.TravelExpenses.STATUS_REGISTRATA)
                    {
                        <td colspan="2" style="padding-top:6px;text-align:right;"><button onclick="travelExpenseHeader_update();">Aggiorna</button></td>
                    }
                    else
                    {
                        <td colspan="2" style="padding-top:6px;"></td>
                    }
                </tr>
            </table>
        </div>
        <div style="margin-top:12px;">
            @if (Model.Works != null)
            {
                if (Model.Works.Count > 0)
                {
                    <table>
                        <thead>
                            <tr><th>DATA</th><th style="padding-left:12px;">COMMESSA</th><th style="padding-left:12px;text-align:right;">ORE</th></tr>
                        </thead>
                        <tbody>
                            @foreach (var w in Model.Works)
                            {
                                
                                <tr>
                                    <td><input type="checkbox" data-workid="@Html.Raw(w.WorkJournalId)" id="@Html.Raw("JCHK" + w.WorkJournalId.ToString())" name="@Html.Raw("JCHK" + w.WorkJournalId.ToString())" checked /> @Html.Raw(w.Date.ToString("d"))</td>
                                    <td style="padding-left:12px;">@Html.Raw(string.Format("[{0}] {1}", w.Jobs.Code, w.Jobs.Description))</td>
                                    <td style="padding-left:12px;text-align:right;">@Html.Raw(w.WorkedHours)</td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <td style="padding-left:12px;">@Html.Raw(w.TaskWhere)</td>
                                    <td></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div style="font-weight:800;">Non sono presenti attività</div>
                }
            }
            else
            {
                <div style="font-weight:800;">Data inizio e fine non definite</div>
            }
        </div>
            <div style="margin-top:12px;">
                @if (Model.TravelExpense.Status != Job.EFDataModel.TravelExpenses.STATUS_REGISTRATA)
                {
                    <a href="#" onclick="add_TravelExpenseLine();">Nuova riga...</a>
                }
                <table>
                    <thead>
                        <tr><th>Data</th><th style="padding-left:12px;">Categoria</th><th style="text-align:right;padding-left:12px;">Importo</th></tr>
                    </thead>
                    <tbody id="tbodyTravelExpenseLine"></tbody>
                </table>
            </div>
        </div>
</div>

