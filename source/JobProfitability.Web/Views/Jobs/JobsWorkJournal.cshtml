@model JobManagement.WebMvc.Models.Jobs.JobsWorkJournalModel
@{
    ViewBag.Title = "JobWorkJournal";
    Layout = "~/Views/Shared/_SpaceLayout.cshtml";
}

<ol class="breadcrumb">
    <li>Home</li>
    <li class="active">Elenco lavoro svolto</li>
</ol>
<ol class="list-inline">
    <li><button type="button" class="btn btn-xs" data-id="" onclick="edit_jobworkjournal_line(this);"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Aggiungi riga...</button></li>
</ol>
<style>
    .form-control-width-80 {
        width: 80px;
        min-width: 80px;
    }

    .modal-extralarge {
        width: 94%;
    }

    .row-margin-6top {
        margin-top: 6px;
    }

    .select-line-checkbox {
    }

    th {
        padding-right: 8px;
        padding-left: 8px;
        font-size: 1em;
    }

    td {
        padding-right: 8px;
        padding-left: 8px;
        font-size: .8em;
    }

    .tdWorkListDay {
        text-align: right;
        width: 120px;
    }

    .trStd {
        background-color: #f6f3f3;
    }

    .trAlt {
        background-color: #e6e3e3;
    }

    .trFesStd {
        background-color: #69e87f;
    }

    .trFesAlt {
        background-color: #84ea96;
    }
</style>
<div class="container-fluid">
    @using (Html.BeginForm("JobsWorkJournal", "Jobs", FormMethod.Post, new { @onsubmit = "setHiddenFilterData();" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-inline">
            Risorsa: @Html.DropDownList("filterPeopleId", Model.DDLPeopleList) Cliente: @Html.DropDownList("filterCustomerId", Model.DDLCustomerList) Periodo: <input type="text" id="filterBeginDateDatePicker" name="filterBeginDateDatePicker" class="form-control form-control-width-80" /> <input type="hidden" id="filterBeginDate" name="filterBeginDate" /><input type="text" id="filterEndDateDatePicker" name="filterEndDateDatePicker" class="form-control form-control-width-80" /><input type="hidden" id="filterEndDate" name="filterEndDate" />
            <button type="submit" class="btn btn-default"><span class="glyphicon glyphicon-filter" aria-hidden="true"></span> Filtra</button>
        </div>
    }
    <table>
        <thead>
            <tr><th></th><th>DATA</th><th>ORE</th><th>Persona</th><th>Commessa</th><th>Attività</th></tr>
        </thead>
        <tbody>
            @{int rowPos = 1;}
            @foreach (var e in Model.WorkJournalList)
            {
                <tr class="@Html.Raw(JobManagement.WebMvc.Models.Jobs.JobsWorkJournalModel.getListRowStyle(e, rowPos))">
                    <td>
                        @if (e.JobWorkJournalId > 0)
                        {
                            <button type="button" class="btn-xs btn-default" data-id="@Html.Raw(e.JobWorkJournalId.ToString())" onclick="edit_jobworkjournal_line(this);"><span class="fa fa-edit"></span></button>
                        }
                    </td>
                    <td class="tdWorkListDay">@Html.Raw(string.Format("{0} {1:dd/MM/yyyy}", Code.UtiliMix.getThreeCharDayName(e.Date), e.Date))</td>
                    <td>@Html.Raw(e.WorkedHours == decimal.Zero ? string.Empty : e.WorkedHours.ToString("N2"))</td>
                    <td>@Html.Raw(e.People == null ? string.Empty : e.People.FirstName + " " + e.People.LastName)</td>
                    <td>@Html.Raw(e.Jobs == null ? String.Empty : e.Jobs.JobId + " - " + e.Jobs.Description)</td>
                    <td>@Html.Raw(string.IsNullOrWhiteSpace(e.JobTaskId) ? string.Empty : e.JobTaskId)</td>
                </tr>
                if (!string.IsNullOrWhiteSpace(e.TaskWhere))
                {
                    <tr><td></td><td></td><td></td><td colspan="3">@Html.Raw(e.TaskWhere)</td></tr>
                }
                if (!string.IsNullOrWhiteSpace(e.Annotation))
                {
                    <tr><td></td><td></td><td></td><td colspan="3">@Html.Raw(e.Annotation)</td></tr>
                }
                rowPos += 1;
            }
        </tbody>
    </table>
</div>

@section sectionScripts {
    <script type="text/javascript">
    $(document).ready(function () {
        $('#filterResourceId').select2({
            width: '320px',
            placeholder: "Seleziona una risorsa",
            allowClear: true
        });
        $('#filterCustomerId').select2({
            width: '320px',
            placeholder: "Seleziona un cliente",
            allowClear: true
        });
        @if (Model.Customer != null)
        {
            <text>$('#filterCustomerId').select2('val', '');</text>
        }

        $('#filterBeginDateDatePicker').datepicker({
            firstDay: 1,
            dateFormat: 'dd/mm/yy',
            onSelect: function (dateText, inst) {
                var db = $(this).datepicker('getDate');
                var de = new Date(db.getFullYear(), db.getMonth() + 1, 1);
                de.setDate(de.getDate() - 1);
                $('#filterEndDateDatePicker').datepicker('setDate', de);
            }
        }).datepicker('setDate', '@Html.Raw(string.Format("{0:dd/MM/yyyy}", Model.BeginDate))');
        $('#filterEndDateDatePicker').datepicker({
            firstDay: 1,
            dateFormat: 'dd/mm/yy'
        }).datepicker('setDate', '@Html.Raw(string.Format("{0:dd/MM/yyyy}", Model.EndDate))');
    }); //  $(document).ready
    function setHiddenFilterData() {
        $('#filterBeginDate').val(zzsDateToISOString($('#filterBeginDateDatePicker').datepicker('getDate')));
        $('#filterEndDate').val(zzsDateToISOString($('#filterEndDateDatePicker').datepicker('getDate')));
    }
    function edit_jobworkjournal_line(btn) {
        var id = btn.getAttribute("data-id");
        //if (id != null) {
        //    if (id.trim() == '') {
        //        id = 0;
        //    }
        //}
        //if (d == null) d = 0;
        if (id > 0) {
            $('#modal-placeholder').load('@Url.Content("~/Jobs/ModalEditJobWorkJournal")/' + id);
        } else {
            $('#modal-placeholder').load('@Url.Content("~/Jobs/ModalEditJobWorkJournal")');
        }
    }
    function CreateJobReport() {

    }
    </script>
}




